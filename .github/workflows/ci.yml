name: CI and Artifacts

on:
    pull_request:
    push:
        # documentation workflow deals with this or is not relevant for this workflow
        paths-ignore:
            - "*.md"
            - "conduwuit-example.toml"
            - "book.toml"
            - ".gitlab-ci.yml"
            - ".gitignore"
            - "renovate.json"
            - "docs/**"
            - "debian/**"
            - "docker/**"
        branches:
            - main
        tags:
            - "*"
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

concurrency:
    group: ${{ github.head_ref || github.ref_name }}
    cancel-in-progress: true

env:
    # Required to make some things output color
    TERM: ansi
    # Just in case incremental is still being set to true, speeds up CI
    CARGO_INCREMENTAL: 0
    # Use the all-features devshell instead of default, to ensure that features
    # match between nix and cargo
    DIRENV_DEVSHELL: all-features
    # Get error output from nix that we can actually use
    NIX_CONFIG: show-trace = true
    # Compile for high performanc on local CPU
    CARGO_PROFILE: release-high-perf
    NIX_CFLAGS_COMPILE: -march=native -mtune=native
    NIX_LDFLAGS: -march=native -mtune=native
    RUSTFLAGS: -C target-cpu=native

permissions:
    packages: write
    contents: read

jobs:
    build:
        name: Build
        runs-on: self-hosted
        steps:
            - name: Sync repository
              uses: actions/checkout@v4

            - name: Tag comparison check
              if: startsWith(github.ref, 'refs/tags/v')
              run: |
                  # Tag mismatch with latest repo tag check to prevent potential downgrades
                  LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)

                  if [ $LATEST_TAG != ${{ github.ref_name }} ]; then
                    echo '# WARNING: Attempting to run this workflow for a tag that is not the latest repo tag. Aborting.'
                    echo '# WARNING: Attempting to run this workflow for a tag that is not the latest repo tag. Aborting.' >> $GITHUB_STEP_SUMMARY
                    exit 1
                  fi

            - name: Install Nix
              uses: DeterminateSystems/nix-installer-action@main

            - name: Enable Cachix binary cache
              run: |
                  nix profile install nixpkgs#cachix
                  cachix use crane
                  cachix use nix-community

            - name: Configure Magic Nix Cache
              uses: DeterminateSystems/magic-nix-cache-action@main

            - name: Apply Nix binary cache configuration
              run: |
                  sudo tee -a /etc/nix/nix.conf > /dev/null <<EOF
                  extra-substituters = https://attic.kennel.juneis.dog/conduit https://attic.kennel.juneis.dog/conduwuit https://cache.lix.systems
                  extra-trusted-public-keys = conduit:eEKoUwlQGDdYmAI/Q/0slVlegqh/QmAvQd7HBSm21Wk= conduwuit:BbycGUgTISsltcmH0qNjFR9dbrQNYgdIAcmViSGoVTE= cache.lix.systems:aBnZUw8zA7H35Cz2RyKFVs3H4PlGTLawyY5KRbvJR8o=
                  EOF

            - name: Prepare build environment
              run: |
                  echo 'source $HOME/.nix-profile/share/nix-direnv/direnvrc' > "$HOME/.direnvrc"
                  nix profile install --impure --inputs-from . nixpkgs#direnv nixpkgs#nix-direnv
                  direnv allow
                  nix develop .#all-features --command true

            - name: Cache CI dependencies
              run: |
                  bin/nix-build-and-cache ci

            - name: Build static x86_64-unknown-linux-musl
              run: |
                  CARGO_DEB_TARGET_TUPLE=$(echo x86_64-unknown-linux-musl | grep -o -E '^([^-]*-){3}[^-]*')
                  bin/nix-build-and-cache just .#static-x86_64-unknown-linux-musl
                  mkdir -v -p target/release/
                  mkdir -v -p target/$CARGO_DEB_TARGET_TUPLE/release/
                  cp -v -f result/bin/conduit target/release/conduwuit
                  cp -v -f result/bin/conduit target/$CARGO_DEB_TARGET_TUPLE/release/conduwuit
                  # -p conduit is the main crate name
                  direnv exec . cargo deb --verbose --no-build --no-strip -p conduit --target=$CARGO_DEB_TARGET_TUPLE --output target/release/x86_64-unknown-linux-musl.deb
                  mv -v target/release/conduwuit static-x86_64-unknown-linux-musl
                  mv -v target/release/x86_64-unknown-linux-musl.deb x86_64-unknown-linux-musl.deb

            - name: Upload static-x86_64-unknown-linux-musl
              uses: actions/upload-artifact@v4
              with:
                  name: static-x86_64-unknown-linux-musl
                  path: static-x86_64-unknown-linux-musl
                  if-no-files-found: error

            - name: Upload deb x86_64-unknown-linux-musl
              uses: actions/upload-artifact@v4
              with:
                  name: deb-x86_64-unknown-linux-musl
                  path: x86_64-unknown-linux-musl.deb
                  if-no-files-found: error
                  compression-level: 0

            - name: Build OCI image x86_64-unknown-linux-musl
              run: |
                  bin/nix-build-and-cache just .#oci-image-x86_64-unknown-linux-musl
                  cp -v -f result oci-image-x86_64-unknown-linux-musl.tar.gz

            - name: Upload OCI image x86_64-unknown-linux-musl
              uses: actions/upload-artifact@v4
              with:
                  name: oci-image-x86_64-unknown-linux-musl
                  path: oci-image-x86_64-unknown-linux-musl.tar.gz
                  if-no-files-found: error
                  compression-level: 0

    docker:
        name: Docker publish
        runs-on: ubuntu-latest
        needs: build
        if: (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main' || github.event.pull_request.draft != true)
        env:
            GHCR_AMD64: ghcr.io/${{ github.repository }}:${{ (github.head_ref != '' && format('merge-{0}-{1}', github.event.number, github.event.pull_request.user.login)) || github.ref_name }}-${{ github.sha }}-amd64
            GHCR_TAG: ghcr.io/${{ github.repository }}:${{ (github.head_ref != '' && format('merge-{0}-{1}', github.event.number, github.event.pull_request.user.login)) || github.ref_name }}-${{ github.sha }}
            GHCR_BRANCH: ghcr.io/${{ github.repository }}:${{ (startsWith(github.ref, 'refs/tags/v') && 'latest') || (github.head_ref != '' && format('merge-{0}-{1}', github.event.number, github.event.pull_request.user.login)) || github.ref_name }}

        steps:
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Download artifacts
              uses: actions/download-artifact@v4

            - name: Move OCI images into position
              run: |
                  mv -v oci-image-x86_64-*/*.tar.gz oci-image-amd64.tar.gz

            - name: Load and push amd64 image
              run: |
                  docker load -i oci-image-amd64.tar.gz
                  docker tag $(docker images -q conduit:main) ${{ env.GHCR_AMD64 }}
                  docker push ${{ env.GHCR_AMD64 }}
                  docker tag $(docker images -q conduit:main) ${{ env.GHCR_TAG }}
                  docker push ${{ env.GHCR_TAG }}
                  docker tag $(docker images -q conduit:main) ${{ env.GHCR_BRANCH }}
                  docker push ${{ env.GHCR_BRANCH }}
